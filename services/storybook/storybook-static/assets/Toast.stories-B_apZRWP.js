import{j as r}from"./clsx-UwsAJbxu.js";import{I as p}from"./index-uDaHXXFG.js";import{r as a}from"./index-4g5l5LRQ.js";import"./index-5a0SfqdR.js";import"./_commonjsHelpers-4gQjN7DL.js";var v="zxxt9c0",h="zxxt9c1",j=({children:e})=>r.jsx("div",{tabIndex:-1,className:v,children:e}),T=e=>{let{message:t}=e;return r.jsx("div",{className:h,children:t})},u=a.createContext({toast:()=>{}}),f=({children:e})=>{let[t,n]=a.useState(void 0),o=a.useRef(void 0),m=i=>{let{timeout:x=3e3}=i;t&&(n(void 0),clearTimeout(o.current),o.current=void 0),n(i.payload),o.current=setTimeout(()=>{n(void 0),o.current=void 0},x)};return r.jsxs(u.Provider,{value:{toast:m},children:[e,r.jsx(j,{children:t&&r.jsx(T,{...t})})]})},E=()=>{let e=a.useContext(u);if(!e)throw new Error("useToast must be use within a ToastProvider");return e};const B={title:"React Components/Toast",parameters:{layout:"centered"},tags:["autodocs"]},y=()=>{const{toast:e}=E();return r.jsx(p,{onClick:()=>e({payload:{message:"Hello World"}}),children:"Toast Button"})},s={render:()=>r.jsx(f,{children:r.jsx(y,{})})};var c,d,l;s.parameters={...s.parameters,docs:{...(c=s.parameters)==null?void 0:c.docs,source:{originalSource:`{
  render: () => <ToastProvider>
      <Example />
    </ToastProvider>
}`,...(l=(d=s.parameters)==null?void 0:d.docs)==null?void 0:l.source}}};const I=["ButtonStory"];export{s as ButtonStory,I as __namedExportsOrder,B as default};
